{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Chart/ExpensesChart.js","components/Expenses/ExpenseItems.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setTitle","amount","onClick","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseItems","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","length","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","parseInt","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","addExpense","expenseItems","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bbbbb5b.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  return (\r\n  <div className={classes}>\r\n    {props.children}\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString('en-GB', {month: 'long'});\r\n  const day = props.date.toLocaleString('en-GB', { day: '2-digit'});\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpenseDate;","import { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n  const [title, setTitle] = useState(props.title)\r\n\r\n  function clickHandler() {\r\n    setTitle('Updated!');\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <div className=\"expense-item__description\">\r\n        <ExpenseDate date={props.date} />\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">£{props.amount}</div>\r\n        <button onClick={clickHandler}>Change Title</button>\r\n      </div>\r\n    </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpenseFilter.css'\r\n\r\nfunction ExpensesFilter(props) {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n  console.log(barFillHeight)\r\n\r\n  return (\r\n  <div className=\"chart-bar\">\r\n    <div className=\"chart-bar__label\">£{props.value}</div>\r\n\r\n    <div className=\"chart-bar__inner\">\r\n      <div \r\n        className=\"chart-bar__fill\" \r\n        style={{height: barFillHeight}}>\r\n      </div>\r\n    </div>\r\n    <div className=\"chart-bar__label\">{props.label}</div>\r\n  </div> \r\n  );\r\n};\r\n\r\nexport default ChartBar;","import './Chart.css';\r\n\r\nimport ChartBar from './ChartBar';\r\n\r\nfunction Chart(props) {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return <div className=\"chart\">\r\n    {\r\n      props.dataPoints.map(dataPoint => {\r\n        return <ChartBar \r\n          key={dataPoint.label}\r\n          value={dataPoint.value} \r\n          maxValue={totalMaximum} \r\n          label={dataPoint.label} \r\n        />\r\n      })\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Chart;","import Chart from './Chart';\r\n\r\nfunction ExpensesChart(props) {\r\n\r\n  const chartDataPoints = [\r\n    {label: 'Jan', value: 0},\r\n    {label: 'Feb', value: 0},\r\n    {label: 'Mar', value: 0},\r\n    {label: 'Apr', value: 0},\r\n    {label: 'May', value: 0},\r\n    {label: 'Jun', value: 0},\r\n    {label: 'July', value: 0},\r\n    {label: 'Aug', value: 0},\r\n    {label: 'Sep', value: 0},\r\n    {label: 'Oct', value: 0},\r\n    {label: 'Nov', value: 0},\r\n    {label: 'Dec', value: 0}\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import './ExpenseItems.css';\r\nimport { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpensesFilter from './ExpenseFilter';\r\nimport ExpensesChart from '../Chart/ExpensesChart';\r\n\r\nfunction ExpenseItems(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear)\r\n  };\r\n\r\n\r\n  const filteredExpenses = props.expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expense-items\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        {filteredExpenses.length > 0 ? filteredExpenses.map(expense => {\r\n          return <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            date={expense.date}\r\n            amount={expense.amount}\r\n          />\r\n        }) : <p className=\"no-expenses\">No expenses found for {filteredYear}</p>}\r\n\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpenseItems;","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle ] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: ''\r\n  // })\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value\r\n    // })\r\n    // setUserInput((prevState, props) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     enteredTitle: event.target.value\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(parseInt(event.target.value));\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value\r\n    // })\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate)\r\n    }\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredAmount('');\r\n    setEnteredTitle('');\r\n    setEnteredDate('');\r\n\r\n  };\r\n\r\n  return (\r\n   <form onSubmit={submitHandler}>\r\n     <div className=\"new-expense__controls\">\r\n      <div className=\"new-expense__control\">\r\n         <label>Title</label>\r\n          <input \r\n            type=\"text\" \r\n            value={enteredTitle} \r\n            onChange={titleChangeHandler} \r\n          />\r\n       </div>\r\n\r\n       <div className=\"new-expense__control\">\r\n         <label>Amount</label>\r\n          <input \r\n            type=\"number\" \r\n            value={enteredAmount} \r\n            min=\"0.01\" \r\n            step=\"0.01\" \r\n            onChange={amountChangeHandler} \r\n          />\r\n       </div>\r\n\r\n       <div className=\"new-expense__control\">\r\n         <label>Date</label>\r\n          <input \r\n            type=\"date\" \r\n            value={enteredDate} \r\n            min=\"2019-01-01\" \r\n            max=\"2022-12-31\" \r\n            onChange={dateChangeHandler} \r\n          />\r\n       </div>\r\n       \r\n     </div>\r\n\r\n     <div className=\"new-expense__actions\">\r\n       <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n       <button type=\"submit\">Add Expense</button>\r\n     </div>\r\n     \r\n\r\n\r\n   </form> \r\n  );\r\n}\r\n\r\nexport default ExpenseForm;","import ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\nimport './NewExpense.css';\r\n\r\nfunction NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    }\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditinghandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n      {isEditing && <ExpenseForm onCancel={stopEditinghandler} onSaveExpenseData={saveExpenseDataHandler} addExpense={props.addExpense} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;","import ExpenseItems from \"./components/Expenses/ExpenseItems\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport {useState} from 'react';\nconst expenseItems = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2019, 5, 12),\n  }\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(expenseItems)\n\n  const addExpenseHandler = expense => {\n    // const updatedExpenses = [...expenses]\n    // updatedExpenses.push(expense)\n    // setExpenses(updatedExpenses)\n    setExpenses((prevExpenses => {\n      return [expense, ...prevExpenses];\n    }));\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <ExpenseItems expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}